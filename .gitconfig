# vim: set syntax=gitconfig noet:
[alias]
	ci = commit
	st = status
	co = checkout
	br = branch
	grepr = grep --recurse-submodules
	grepu = grep --untracked
	wsfix = !git diff HEAD >P.diff && git reset --hard HEAD && git apply --index --whitespace=fix P.diff && rm -f P.diff
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	civ = commit --verbose
	hist2 = log --graph --pretty=\"format:%C(yellow bold)%h%Creset by %C(red)%an%Creset (%ar)%C(cyan bold)%d%Creset%n%s%n%b\" --all
	filesofcommit = diff-tree --no-commit-id --name-only -r
	logf = log --name-status
	ss = status -sb
	ls = ls-tree --name-only HEAD
	ssu = status -sb -uno
	logd = log --decorate
	logg = log --decorate --graph
	# When a moron commits its tags file, it craps all the searches for functions, types in the code
	# Take care of that by ignoring faulty file which should never have been commited
	# Possible syntax is: -- . ":(exclude).tags_swap"
	# but git config does not like it due to parenthesis
	lognocrap = "!f() { git log $@ -- . ':!.tags_swap';}; f"
	notesfetch = fetch origin refs/notes/*:refs/notes/*
	notespush = push origin refs/notes/*
	root = rev-parse --show-toplevel
	l1 = log -1
        unstage = restore --staged
        # Interactive aliases
        # Select the files to add
        fadd = "!add_fzf() { git status -s | fzf -m | sed 's/^ *//' | cut -f2- -d ' ' | xargs git add; }; add_fzf"
        funstage = "!unstage_fzf() { git status -suno | grep '^A' | cut -f2- -d ' ' | fzf | xargs git restore --staged; }; unstage_fzf"
        frestore = "!restore_fzf() { git status -suno | grep '^ *M'| fzf -m | sed 's/^ *//' | cut -f2- -d ' ' | xargs git restore; }; restore_fzf"
        # Clean branches which have been merged to default branch
        bclean = "!f() { default_branch=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}'); branches=$(git branch --merged ${1-${default_branch}} | grep -v " ${1-${default_branch}}$"); [ -z \"$branches\" ] || git branch -d $branches; }; f"
	cifu = "!commit_fixup() { git commit --fixup=\"$1\"; git rebase -i --autosquash \"$1\"^; }; commit_fixup"


[color]
	ui = true
[core]
	excludesfile = ~/.gitignore_global
	editor = nvim
[merge]
	defaulttoupstream = true
[push]
	default = upstream
	recurseSubmodules = check
[include]
	path = ~/.gitconfig_user
[credential]
	helper = store
[init]
	defaultBranch = main
